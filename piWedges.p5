// piWedges.p5 - Ky Mathewson
// Display frequency bands with wedges in circle

class MySketch extends React.Component {
 setup(p5, whereToPlot) {
   p5.createCanvas(500, 500).parent(whereToPlot)
   p5.noStroke();
   p5.colorMode(p5.HSB, 100, 255, 255, 1);
   p5.frameRate(10)
 }

 draw(p5) {
   p5.background(128);
  

   tao = 2 * p5.PI;
   nbands = 5;
   part = tao / nbands;
   
   bands = ['delta', 'theta', 'alpha', 'beta', 'gamma'];
  
  DELTA = brain.current.bands.data.delta[0]* 10;
   THETA = brain.current.bands.data.theta[0]* 10;
   ALPHA = brain.current.bands.data.alpha[0]* 10;   
   BETA =  brain.current.bands.data.beta[0]* 10;
   GAMMA =  brain.current.bands.data.gamma[0]* 10;
   
   bandDat = [DELTA, THETA, ALPHA, BETA, GAMMA];
   
   gap = (DELTA + THETA + ALPHA + BETA + GAMMA)/5
      
    size = 10

   p5.fill(1, 255, DELTA * size);
   p5.arc(250, 250, DELTA * size, DELTA * size, -p5.PI, -p5.PI+part);

   p5.fill(20, 255, THETA * size);
   p5.arc(250, 250, THETA * size, THETA * size, -p5.PI+part, -p5.PI+part*2);

   p5.fill(40, 255, ALPHA * size);
   p5.arc(250, 250, ALPHA * size, ALPHA * size, -p5.PI+part*2, -p5.PI+part*3);

   p5.fill(60, 255, ALPHA * size);
   p5.arc(250, 250, BETA * size, BETA * size, -p5.PI+part*3, -p5.PI+part*4);

   p5.fill(80, 255, GAMMA * size);
   p5.arc(250, 250, GAMMA * size, GAMMA * size, -p5.PI+part*4, -p5.PI+part*5);
      
 }

 render() {
   return (
      <Sketch
        setup={this.setup}
        draw={this.draw}
      />
   )
 }

}

render (
 <MySketch />
)

     
